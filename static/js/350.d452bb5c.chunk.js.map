{"version":3,"file":"static/js/350.d452bb5c.chunk.js","mappings":"0LAEaA,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OAAO,wBAAKA,M,kLCAP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,YAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,mBAAsBI,EAAtB,kBADlB,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,IAAAA,IAAU,UAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBP,IAAAA,IAAA,iBAAoBO,EAApB,oBADlB,cACCN,EADD,yBAEEA,EAASC,MAFX,kEAjBPF,IAAAA,SAAAA,QAAyB,yB,yICIZQ,EAAkB,WAC7B,IAAQD,GAAWE,EAAAA,EAAAA,MAAXF,OACR,GAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BP,GAAQQ,KAAKH,KACvC,CAACL,KAGF,iCACE,UAAC,IAAD,6CAAoBA,KACnBI,IACC,iCACE,gBAAKK,IAAKL,EAAKM,OAAQC,IAAKP,EAAKQ,SACjC,wBAAKR,EAAKQ,SACV,4DAAWR,EAAKS,OAAOC,SACvB,uBAAIV,EAAKW","sources":["components/PageHeading/PageHeading.jsx","services/bookshelf-api.js","views/BookDetailsView.jsx"],"sourcesContent":["// import { Heading } from './PageHeading.styled';\n\nexport const PageHeading = ({ children }) => {\n  return <h1>{children}</h1>;\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchAuthors() {\n  const response = await axios.get('/authors');\n  return response.data;\n}\n\nexport async function fetchAuthorById(id) {\n  const response = await axios.get(`/authors/${id}?_embed=books`);\n  return response.data;\n}\n\nexport async function fetchBooks() {\n  const response = await axios.get('/books');\n  return response.data;\n}\n\nexport async function fetchBookById(bookId) {\n  const response = await axios.get(`/books/${bookId}?_expand=author`);\n  return response.data;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PageHeading } from 'components/PageHeading/PageHeading';\nimport * as bookShelfAPI from '../services/bookshelf-api';\n\nexport const BookDetailsView = () => {\n  const { bookId } = useParams();\n  const [book, setBook] = useState(null);\n\n  useEffect(() => {\n    bookShelfAPI.fetchBookById(bookId).then(setBook);\n  }, [bookId]);\n\n  return (\n    <>\n      <PageHeading>Книга {bookId}</PageHeading>\n      {book && (\n        <>\n          <img src={book.imgUrl} alt={book.title} />\n          <h2>{book.title}</h2>\n          <p>Автор: {book.author.name}</p>\n          <p>{book.descr}</p>\n        </>\n      )}\n    </>\n  );\n};\n"],"names":["PageHeading","children","fetchAuthors","axios","response","data","fetchAuthorById","id","fetchBooks","fetchBookById","bookId","BookDetailsView","useParams","useState","book","setBook","useEffect","bookShelfAPI","then","src","imgUrl","alt","title","author","name","descr"],"sourceRoot":""}