{"version":3,"file":"static/js/129.fd0d1c14.chunk.js","mappings":"0LAEaA,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OAAO,wBAAKA,M,kLCAP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,YAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,mBAAsBI,EAAtB,kBADlB,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,IAAAA,IAAU,UAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBP,IAAAA,IAAA,iBAAoBO,EAApB,oBADlB,cACCN,EADD,yBAEEA,EAASC,MAFX,kEAjBPF,IAAAA,SAAAA,QAAyB,yB,+ICIZQ,EAAc,WACzB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BC,KAAKH,KAChC,KAGD,iCACE,SAAC,IAAD,mDAECD,IACC,wBACGA,EAAQK,KAAI,SAAAC,GAAM,OACjB,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAOZ,IAAvB,SAA8BY,EAAOE,QAD9BF,EAAOZ,UAMtB,mBACA,SAAC,KAAD","sources":["components/PageHeading/PageHeading.jsx","services/bookshelf-api.js","views/AuthorsView.jsx"],"sourcesContent":["// import { Heading } from './PageHeading.styled';\n\nexport const PageHeading = ({ children }) => {\n  return <h1>{children}</h1>;\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchAuthors() {\n  const response = await axios.get('/authors');\n  return response.data;\n}\n\nexport async function fetchAuthorById(id) {\n  const response = await axios.get(`/authors/${id}?_embed=books`);\n  return response.data;\n}\n\nexport async function fetchBooks() {\n  const response = await axios.get('/books');\n  return response.data;\n}\n\nexport async function fetchBookById(bookId) {\n  const response = await axios.get(`/books/${bookId}?_expand=author`);\n  return response.data;\n}\n","import { useState, useEffect } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport * as bookShelfAPI from '../services/bookshelf-api';\nimport { PageHeading } from 'components/PageHeading/PageHeading';\n\nexport const AuthorsView = () => {\n  const [authors, setAuthors] = useState(null);\n\n  useEffect(() => {\n    bookShelfAPI.fetchAuthors().then(setAuthors);\n  }, []);\n\n  return (\n    <>\n      <PageHeading>Авторы</PageHeading>\n\n      {authors && (\n        <ul>\n          {authors.map(author => (\n            <li key={author.id}>\n              <NavLink to={`${author.id}`}>{author.name}</NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n      <hr />\n      <Outlet />\n    </>\n  );\n};\n"],"names":["PageHeading","children","fetchAuthors","axios","response","data","fetchAuthorById","id","fetchBooks","fetchBookById","bookId","AuthorsView","useState","authors","setAuthors","useEffect","bookShelfAPI","then","map","author","to","name"],"sourceRoot":""}