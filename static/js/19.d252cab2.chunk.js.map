{"version":3,"file":"static/js/19.d252cab2.chunk.js","mappings":"wQAEaA,EAAOC,EAAAA,EAAAA,KAAH,6CAIJC,EAASD,EAAAA,EAAAA,GAAH,mJASNE,EAAeF,EAAAA,EAAAA,KAAH,2DAIZG,EAAQH,EAAAA,EAAAA,MAAH,gPAaLI,EAAQJ,EAAAA,EAAAA,MAAH,oNAaLK,EAASL,EAAAA,EAAAA,OAAH,ka,UCjCNM,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,4BACE,UAACjB,EAAD,8BACE,UAACC,EAAD,oBACE,iBAAMiB,KAAK,MAAM,aAAW,YAA5B,oBADF,UADF,eASA,UAACpB,EAAD,CAAMqB,SAnBW,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,EAAAA,GAAAA,SAAwB,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAcoBS,aAAa,MAA3C,WACE,UAACrB,EAAD,mBAEE,SAACC,EAAD,CACEqB,KAAK,OACLf,KAAK,OACLQ,MAAOR,EACPgB,SAAUV,EAEVW,QAAQ,+HAIZ,UAACxB,EAAD,qBAEE,SAACC,EAAD,CACEqB,KAAK,QACLf,KAAK,QACLQ,MAAON,EACPc,SAAUV,EAEVW,QAAQ,iDAIZ,UAACxB,EAAD,uBAEE,SAACC,EAAD,CACEqB,KAAK,WACLf,KAAK,WACLQ,MAAOJ,EACPY,SAAUV,EACVQ,aAAa,YAKjB,SAACnB,EAAD,CAAQoB,KAAK,SAAb","sources":["styles/RegisterView.styles.js","views/RegisterView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    max-width: 300;\n`\n\nexport const Header = styled.h1`\n    margin-top: 40px;\n\n    font-size: 22px;\n    font-weight: 700;\n    color: #191970;\n    text-transform: uppercase;\n`\n\nexport const HeaderAccent = styled.span`\n    text-shadow: 0 0 10px yellow;\n`\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n\n    margin-bottom: 15px;\n\n    font-weight: 500;\n    font-size: 14px;\n    color: #191970;\n    text-shadow: 1px 1px 2px #4682B4;\n    text-transform: uppercase;\n`\n\nexport const Input = styled.input`\n    padding: 3px;\n    max-width: 300px;\n\n    margin-top: 5px;\n    font-size: 16px;\n    color: #191970;\n    border: 1px solid #191970;\n    border-radius: 3px;\n\n    outline: none;\n`\n\nexport const Button = styled.button`\n    margin-top: 10px;\n    padding: 2px;\n    width: 90px;\n    box-shadow: 2px 2px 2px #4682B4;\n\n    font-size: 16px;\n    font-weight: 900;\n    color: #191970;\n    background-color: #F0E10D;\n\n    border: 1px solid transparent;\n    border-radius: 3px;\n\n    transition: 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        background-color: #191970;\n        color: #F0E10D;\n`","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport {\n  Form,\n  Label,\n  Header,\n  HeaderAccent,\n  Input,\n  Button,\n} from '../styles/RegisterView.styles';\n\nexport const RegisterView = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <Header>Register for an\n        <HeaderAccent> Pika\n          <span role=\"img\" aria-label=\"Icon-pika\">\n            ⚡\n          </span>\n          Book\n        </HeaderAccent> account\n      </Header>\n\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </Label>\n\n        <Label>\n          E-mail\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n        </Label>\n\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            autoComplete=\"off\"\n\n          />\n        </Label>\n\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </div>\n  );\n};"],"names":["Form","styled","Header","HeaderAccent","Label","Input","Button","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","role","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","pattern"],"sourceRoot":""}